ifdef(<!POST_HS!>, <!
// For any running(PostHS...) either the auth_status was set in the main HS and
// unchanged (along with the RMS), or there was post-hs auth, which means the
// peer's auth_status is 'auth', the actor is a server*/
lemma_posths_rms/* [reuse, use_induction]:
  "All tid actor role hs rms peer auth_status messages #i. 
    running(PostHS, actor, role, hs, rms, peer, auth_status, messages)@i ==>
      Ex aas pas ms #j. 
                running(RMS, actor, role, peer, rms, messages)@j &
                ms = MasterSecret & rms = resumption_master_secret() & #j < #i &
                auth_status = <aas, pas> &
      (
        (Ex aas2 #k. commit(Identity, actor, role, peer, <aas2, pas>)@k & #k < #i) |
        (Ex aas2 #k. commit(IdentityPost, actor, role, peer, <aas2, pas>)@k &
                role = 'server' & pas = 'auth' & (#k < #i | #k = #i)
        )
      )"
*/

// A weakened version of the above lemma when needing to avoid the looping
// issue of the commit(IdentityPost, ...) bit.
// Can use [hide_lemma=posths_rms] to only use this version.
lemma_posths_rms_weak/* [reuse, use_induction]:
  "All tid actor role hs rms peer auth_status messages #i. 
    running(PostHS, actor, role, hs, rms, peer, auth_status, messages)@i ==>
      Ex aas pas ms #j. 
                running(RMS, actor, role, peer, rms, messages)@j &
                ms = MasterSecret & rms = resumption_master_secret() & #j < #i &
                auth_status = <aas, pas>"
*/
!>)


lemma_matching_transcripts_posths/* [reuse]:
  "All tid tid2 actor peer actor2 peer2 role role2 rms rms2 messages #i #j.
    running(RMS, actor, role, peer2, rms, messages)@i &
    running2(RMS, peer, role2, actor2, rms2, messages)@j & not (role = role2) ==>
     rms = rms2"
*/

lemma_matching_rms_posths/* [reuse]:
  "All tid tid2 actor peer actor2 peer2 role role2 rms messages messages2 #i #j.
    running(RMS, actor, role, peer2, rms, messages)@i &
    running2(RMS, peer, role2, actor2, rms, messages2)@j & not (role = role2) ==>
     messages = messages2"
*/