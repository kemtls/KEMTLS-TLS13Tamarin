/*
If the adversary knows AHS or MS while we've commited to having authenticated the peer,
the adversary must have revealed Ltk and known HS before learning AHS.
(Possibly after committing, because they might reveal LTK after committing and used RevEKemSk to learn hs).

This last part is a change from the original model, which restricted RevLtk before commit.
*/

lemma senddata_secret [reuse]:
  "All tid actor peer aas data #send #kudata.
    SendData(tid, actor, peer, <aas, 'auth'>, data)@#send &
    KU(data)@#kudata
    ==>
    (Ex #rev. RevLtk(peer)@#rev & #rev < #kudata)
  "

ifdef(<!TODO!>, <!
lemma senddata_secret_pfs [reuse]:
  "All tid actor peer aas data #send #kudata.
    SendData(tid, actor, peer, <aas, 'auth'>, data)@#send &
    not (Ex #ltk. RevLtk(peer)@#ltk & #ltk < #send) &
    KU(data)@#kudata
    ==>
    (
      (Ex esk #epha. RevEKemSk(tid, actor, esk)@#epha & #epha < #send) |
      (Ex tid2 esk #ephp. RevEKemSk(tid2, peer, esk)@#ephp  & #ephp < #send)
    )
  "
!>)
