/*
If the adversary knows AHS or MS while we've commited to having authenticated the peer,
the adversary must have revealed Ltk and known HS before learning AHS.
(Possibly after committing, because they might reveal LTK after committing and used RevEKemSk to learn hs).

This last part is a change from the original model, which restricted RevLtk before commit.
*/

// To know the master secret for an authenticated peer, the peer's ltk
// must have been revealed. The ahs key needs to also be known, so either
// the adversary must impersonate the peer or it will have to stategically
// have done RevEKemSk.
lemma master_secret [reuse, use_induction, heuristic=cic]:
    "All tid actor role peer ahs ms aas #i #k.
        commit(AHS, actor, role, ahs)@#i &
        commit(MS, actor, role, ms)@#i &
        commit(Identity, actor, role, peer, <aas, 'auth'>)@#i &
        KU(ms)@k ==>
            (Ex #a. KU(ahs)@#a & #a < #k) &
            (Ex #r. RevLtk(peer)@#r & #r < #k)"